[package]
name = "soulbase-net"
version = "1.0.0"
edition.workspace = true
license.workspace = true
description = "Resilient HTTP client with retry/circuit breaker/security for the Soul platform"
repository = "https://example.com/soul-base"

[features]
default = []
auth = ["dep:soulbase-auth", "dep:soulbase-types"]
observe = ["dep:soulbase-observe"]
observe-prometheus = ["observe", "soulbase-observe/prometheus"]

[dependencies]
rand = "0.8"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
async-trait = "0.1"
thiserror = "1"
once_cell = "1"
parking_lot = "0.12"
bytes = "1"
tokio = { version = "1", features = ["rt", "macros", "time", "sync"] }
reqwest = { version = "0.12", default-features = false, features = ["json", "http2", "rustls-tls"] }
http = "1"
url = "2"
hmac = "0.12"
sha2 = "0.10"
base64 = "0.22"

soulbase-errors = { path = "../soulbase-errors", version = "1.0.0" }
soulbase-observe = { path = "../soulbase-observe", version = "1.0.0", optional = true }
soulbase-auth = { path = "../soulbase-auth", version = "1.0.0", optional = true }
soulbase-types = { path = "../soulbase-types", version = "1.0.0", optional = true }

[dev-dependencies]
hyper = { version = "1", features = ["http1", "server"] }
hyper-util = { version = "0.1", features = ["tokio"] }
http-body-util = "0.1"
tokio = { version = "1", features = ["rt-multi-thread", "macros", "time", "net"] }




